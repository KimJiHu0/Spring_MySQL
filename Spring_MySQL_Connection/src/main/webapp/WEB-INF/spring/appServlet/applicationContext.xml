<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 프로젝트 전체에 적용되는 설정을 잡아주는 XML -->
	
	<!-- 방금 작성한 db.propertiees를 등록해줍니다. -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:mybatis/db.properties"></property>
	</bean>
	
	<!-- 
		이와 같이 설정을 잡아줘도 되고 위처럼 잡아줘도 됩니다.
		아래의 경우 property의 name을 locations라고 지정함으로써 여러 개의 DB를 연결할 수 있고, 그 것을 List로 담아서 원하는 것만 뽑아서 사용할 수 있습니다.
		
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:mybatis/db.properties</value>
				</list>
			</property>
		</bean>
	 -->
	
	<!-- dataSource를 설정합니다. : connection 객체를 만들어줍니다. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="username"></property>
		<property name="password" value="password"></property>
	</bean>
	
	<!-- Mybatis 설정을 잡아줍니다. -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="WEB-INF/spring/sqls/config.xml"></property>
	</bean>
	
	<!-- MyBatis Template를 만들어줍니다. -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
		
</beans>
